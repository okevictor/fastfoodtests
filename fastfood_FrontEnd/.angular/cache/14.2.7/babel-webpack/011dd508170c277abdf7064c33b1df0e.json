{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { CustomValidator } from '../../../../custom-validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../Services/authenticate-service/user-service.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction ResetPasswordComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"font\", 14);\n    i0.ɵɵtext(2, \" Password is required \");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ResetPasswordComponent_div_17_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"font\", 14);\n    i0.ɵɵtext(2, \"Password must contain minimum of 8 characters\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ResetPasswordComponent_div_17_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"font\", 14);\n    i0.ɵɵtext(2, \" Password must contain atleast one numeric value\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ResetPasswordComponent_div_17_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"font\", 14);\n    i0.ɵɵtext(2, \"Password must contain atleast one Capital letter\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ResetPasswordComponent_div_17_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"font\", 14);\n    i0.ɵɵtext(2, \" Password must contain atleast one Small letter\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ResetPasswordComponent_div_17_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"font\", 14);\n    i0.ɵɵtext(2, \" Password must contain atleast one special character\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ResetPasswordComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ResetPasswordComponent_div_17_div_1_Template, 3, 0, \"div\", 18);\n    i0.ɵɵtemplate(2, ResetPasswordComponent_div_17_div_2_Template, 3, 0, \"div\", 18);\n    i0.ɵɵtemplate(3, ResetPasswordComponent_div_17_div_3_Template, 3, 0, \"div\", 18);\n    i0.ɵɵtemplate(4, ResetPasswordComponent_div_17_div_4_Template, 3, 0, \"div\", 18);\n    i0.ɵɵtemplate(5, ResetPasswordComponent_div_17_div_5_Template, 3, 0, \"div\", 18);\n    i0.ɵɵtemplate(6, ResetPasswordComponent_div_17_div_6_Template, 3, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.resetForm.controls.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.resetForm.controls.password.errors.minlength);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.resetForm.controls.password.errors.hasNumber);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.resetForm.controls.password.errors.hasCapitalCase);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.resetForm.controls.password.errors.hasSmallCase);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.resetForm.controls.password.errors.hasSpecialCharacters);\n  }\n}\n\nfunction ResetPasswordComponent_div_25_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"font\", 14);\n    i0.ɵɵtext(2, \"Required \");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ResetPasswordComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ResetPasswordComponent_div_25_div_1_Template, 3, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.resetForm.controls.reEnterPassword.errors.required);\n  }\n}\n\nexport let ResetPasswordComponent = /*#__PURE__*/(() => {\n  class ResetPasswordComponent {\n    constructor(formBuilder, router, userService) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.userService = userService;\n      this.changePassword = {\n        emailId: undefined,\n        security_question: undefined,\n        security_answer: undefined,\n        newPassword: undefined,\n        reEnterNewPassword: undefined\n      };\n    }\n\n    ngOnInit() {\n      if (!localStorage.emailId) {\n        this.router.navigate(['']);\n      }\n\n      this.resetForm = this.formBuilder.group({\n        reEnterPassword: ['', Validators.required],\n        password: ['', Validators.compose([Validators.required, Validators.minLength(8), CustomValidator.patternValidator(/\\d/, {\n          hasNumber: true\n        }), CustomValidator.patternValidator(/[A-Z]/, {\n          hasCapitalCase: true\n        }), CustomValidator.patternValidator(/[a-z]/, {\n          hasSmallCase: true\n        }), CustomValidator.patternValidator(/[?=.*/'\":;<>~|[\\]{}\\\\!@#$%^&()]/, {\n          hasSpecialCharacters: true\n        })])]\n      });\n    }\n    /*\r\n    This method is called when the user submits the form and the request is sent and response received\r\n    from the server\r\n    */\n\n\n    verify() {\n      this.submitted = true;\n\n      if (this.resetForm.invalid) {\n        return;\n      } else {\n        this.changePassword.newPassword = this.resetForm.controls.password.value;\n        this.changePassword.reEnterNewPassword = this.resetForm.controls.reEnterPassword.value;\n        this.changePassword.emailId = localStorage.emailId;\n        this.userService.resetPassword(this.changePassword).subscribe(data => {\n          this.message = data;\n          alert(this.message);\n          localStorage.removeItem(\"emailId\");\n        }, err => {\n          this.errormsg = err.error;\n          alert(this.errormsg);\n        });\n      }\n    }\n\n    back() {\n      this.router.navigate(['/authenticate']);\n    }\n\n  }\n\n  ResetPasswordComponent.ɵfac = function ResetPasswordComponent_Factory(t) {\n    return new (t || ResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserServiceService));\n  };\n\n  ResetPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ResetPasswordComponent,\n    selectors: [[\"app-reset-password\"]],\n    decls: 40,\n    vars: 3,\n    consts: [[2, \"transform\", \"scale(0.75)\"], [1, \"right\", 2, \"background\", \"linear-gradient(to bottom, #0099cc 0%, #000066 100%)\", \"height\", \"1125px\"], [1, \"card\", 2, \"margin-top\", \"30%\", \"width\", \"80rem\", \"margin-left\", \"10%\", 3, \"formGroup\", \"ngSubmit\"], [2, \"margin-left\", \"8%\"], [\"src\", \"\\\\assets\\\\Images\\\\reset.png\", \"width\", \"20%\", 2, \"margin-top\", \"2%\"], [1, \"form-group\", \"row\", 2, \"margin-left\", \"10%\"], [1, \"glyphicon\", \"glyphicon-lock\"], [\"size\", \"6\", \"color\", \"red\"], [1, \"col-sm-7\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\"], [4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"reEnterPassword\", \"placeholder\", \"Re-enter password\", 1, \"form-control\"], [1, \"offset-lg-4\", \"col-lg-6\", \"offset-md-4\", \"col-md-6\", \"offset-sm-4\", \"col-sm-6\"], [1, \"btn\", \"btn-success\", 2, \"border-radius\", \"30%\"], [\"size\", \"5\"], [1, \"btn\", \"btn-danger\", 2, \"border-radius\", \"30%\", 3, \"click\"], [1, \"left\"], [\"src\", \"\\\\assets\\\\Images\\\\RESET.gif\", \"width\", \"60%\", \"height\", \"700px\", 2, \"margin-top\", \"20%\", \"margin-left\", \"20%\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n    template: function ResetPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function ResetPasswordComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.verify();\n        });\n        i0.ɵɵelementStart(3, \"div\")(4, \"h1\", 3);\n        i0.ɵɵelement(5, \"img\", 4);\n        i0.ɵɵtext(6, \" \\u00A0 \");\n        i0.ɵɵelementStart(7, \"b\");\n        i0.ɵɵtext(8, \"Reset Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(9, \"br\")(10, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 5);\n        i0.ɵɵelement(12, \"i\", 6);\n        i0.ɵɵelementStart(13, \"font\", 7);\n        i0.ɵɵtext(14, \" *\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 8);\n        i0.ɵɵelement(16, \"input\", 9);\n        i0.ɵɵtemplate(17, ResetPasswordComponent_div_17_Template, 7, 6, \"div\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(18, \"br\");\n        i0.ɵɵelementStart(19, \"div\", 5);\n        i0.ɵɵelement(20, \"i\", 6);\n        i0.ɵɵelementStart(21, \"font\", 7);\n        i0.ɵɵtext(22, \" *\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 8);\n        i0.ɵɵelement(24, \"input\", 11);\n        i0.ɵɵtemplate(25, ResetPasswordComponent_div_25_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(26, \"br\")(27, \"br\");\n        i0.ɵɵelementStart(28, \"div\", 12)(29, \"button\", 13)(30, \"font\", 14);\n        i0.ɵɵtext(31, \"Submit\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtext(32, \" \\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0 \");\n        i0.ɵɵelementStart(33, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function ResetPasswordComponent_Template_button_click_33_listener() {\n          return ctx.back();\n        });\n        i0.ɵɵelementStart(34, \"font\", 14);\n        i0.ɵɵtext(35, \"Cancel\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(36, \"br\")(37, \"br\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(38, \"div\", 16);\n        i0.ɵɵelement(39, \"img\", 17);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.resetForm);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.resetForm.controls.password.errors);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.resetForm.controls.reEnterPassword.errors);\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".glyphicon[_ngcontent-%COMP%], .fa[_ngcontent-%COMP%], .fas[_ngcontent-%COMP%]{font-size:40px}.left[_ngcontent-%COMP%]{float:left;height:100%;width:50%}.right[_ngcontent-%COMP%]{float:right;height:100%;width:50%}\"]\n  });\n  return ResetPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}